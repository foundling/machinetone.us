PRAGMA foreign_keys = ON;
.headers on
.mode column

create table if not exists author (
  id integer primary key autoincrement,
  username text,
  email text,
  first_name text not null,
  last_name text not null,
  password text
);

create table if not exists post (
  id integer primary key autoincrement,
  author_id integer not null,
  pub_date date not null,
  title text not null,
  content text not null,
  published bool default false not null,
  foreign key(author_id) references author(id)
);

create table if not exists tag (
  id integer primary key autoincrement,
  tag text not null unique
);

create table if not exists post_tag (
  id integer primary key autoincrement,
  post_id integer not null,
  tag_id integer not null,
  foreign key(post_id) references post(id),
  foreign key(tag_id) references tag(id),
  unique(post_id,tag_id)
);

create table if not exists post_author (
  id integer primary key autoincrement,
  post_id integer not null,
  author_id integer not null,
  foreign key(post_id) references post(id),
  foreign key(author_id) references author(id),
  unique(post_id, author_id)
);

insert into author 
  (username, email, first_name, last_name, password) 
values 
  ("aramsdell", "alexramsdell@gmail.com", "Alex", "Ramsdell", "$2b$12$YoTuoUKbu/1RmSPbpX6NquY7fb7xqo7Bn5GuSonsNUSMo0VwC4oFq");
insert into author 
  (username, email, first_name, last_name, password) 
values 
  ("jreed", "justin.reed@gmail.com", "Justin", "Reed", "$2b$12$iYA/GyJ9l5c3w80cS0fkIOsCaWzlpTKJacmhnfCASIEbIbZ2zvPu.");

insert into post (pub_date, author_id, title, content, published) values ('2020-03-11', 1, 'test post 1', 'test post content 1', 0);
insert into post (pub_date, author_id, title, content, published) values ('2020-02-04', 1, 'test post 2', 'test post content 2', 0);
insert into post (pub_date, author_id, title, content, published) values ('2020-08-10', 2, 'test post 3', 'test post content 2', 0);
insert into post (pub_date, author_id, title, content, published) values ('2020-01-10', 2, 'test post 4', 'test post content 2', 0);

insert into tag (tag) values ('midi');
insert into tag (tag) values ('new-music');
insert into tag (tag) values ('chicago-house');
insert into tag (tag) values ('electro');

insert into post_tag (post_id, tag_id) values (1, 1);
insert into post_tag (post_id, tag_id) values (1, 2);
insert into post_tag (post_id, tag_id) values (1, 3);
insert into post_tag (post_id, tag_id) values (2, 1);
insert into post_tag (post_id, tag_id) values (2, 2);
insert into post_tag (post_id, tag_id) values (2, 3);
insert into post_tag (post_id, tag_id) values (3, 1);
insert into post_tag (post_id, tag_id) values (4, 3);
insert into post_tag (post_id, tag_id) values (4, 1);
insert into post_tag (post_id, tag_id) values (4, 4);

insert into post_author (post_id, author_id) values(1, 1);
insert into post_author (post_id, author_id) values(3, 1);
insert into post_author (post_id, author_id) values(2, 2);
insert into post_author (post_id, author_id) values(4, 2);

/*
select 
  post.id, post.author, post.title, post.content, post.pub_date, post.published, 
  group_concat(tag.tag, ",") as post_tags
from post 
join post_tag on post.id = post_tag.post_id 
join tag on tag.id = post_tag.tag_id
group by post.id;
*/
